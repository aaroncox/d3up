$(function(){function e(e,t,n,r){t||(t=0);switch(n){case"per":t?t<=1?t=Math.round(t*1e3)/10+"%":t=Math.round(t*10)/10+"%":t="0%";break;case"round":t=Math.round(t*100)/100;default:}var i=e.replace(/\s+/g,"-").toLowerCase();t&&(t=t.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g,"$1,"));var s=$("<li/>").addClass("stat-"+i).html($("<span class='stat-helper'/>").html(e+": ")).append(t);return r&&(r<=1?s.append(" ("+Math.round(r*1e3)/10+"%)"):s.append(" ("+r+"%)")),s}function M(){S={},x={},T={},N={},E.init(),$(".skill-activate").each(function(){S[$(this).data("skill")]=b[$(this).data("skill")],$(this).is(":checked")&&(T[$(this).data("skill")]=b[$(this).data("skill")])}),$(".passive-activate").each(function(){x[$(this).data("skill")]=w[$(this).data("skill")],$(this).is(":checked")&&(T[$(this).data("skill")]=w[$(this).data("skill")])}),E.setActives(S),E.setEnabledSkills(T),E.setPassives(x),E.setParagonLevel($("#paragon-level").text()),E.setClass($("#character").data("class")),$(".equipped a").each(function(){var e=$(this).parent().data("slot"),t=$(this).data("json");E.setItem(e,t)}),C=E.run(),_.each(C.skillData,function(e,t){e.activate&&$(".skill-calc-row[data-id='"+t+"'] .control").show()},this),P()}function D(){var e=$("#build-active-skills").empty(),t=activeActives,n=activePassives;n.length&&y.empty(),t.length&&g.empty(),_.each(t,function(t){if(t!="undefined"&&t!=""){var n=activeSkills[d][t];if(!n||!n.effect)return;var r=$("<li class='skill-calc-row'>").attr("data-json",JSON.stringify(n.effect)).attr("data-id",t).attr("id","skill-"+t),i=t.split("~"),s=$("<img src='/images/icons/"+d+"-"+i[0]+".png'>"),o=$("<h3>").html(n.name),u=$("<ul class='details'>"),a=$("<p><span class='stat-helper'>Description</span>: </p>").append(n.desc),f=$("<p>"),l=$("<div class='control'></div>");s.attr("data-tooltip",n.desc),s.attr("data-name",n.name),n.rune&&(s.attr("data-tooltip",n.desc.replace(/  /,"<br/><br/>")+"<br/><br/>"+n.rune),f=$("<p>").html("<span class='stat-helper'>Rune Bonus</span>: "+n.rune)),s.bindSkilltip();if(n.effect){var c=$("<input type='checkbox' class='skill-activate' data-skill='"+t+"'>");c.click(function(){r.toggleClass("skill-activated"),M()}),l.append("Activate ",c).hide()}g.append($("<li>").append(s.clone())),r.append(s,l,o,u,a,f),e.append(r)}}),_.each(n,function(t){var n=t;if(n!="undefined"&&n!=""){var r=passives[d][n];if(!r)return;var i=$("<li class='skill-calc-row'>").attr("data-id",n).attr("id","skill-"+n),s=n.split("~"),o=$("<img src='/images/icons/"+d+"-"+s[0]+".png'>"),u=$("<h3>").html(t.replace(/\-/g," ").capitalize()),a=$("<ul class='details'>"),f=$("<p>").append(r.desc),l=$("<div class='control'></div>");o.attr("data-tooltip",r.desc),o.attr("data-name",t.replace(/\-/g," ").capitalize()),o.bindSkilltip();var c=$("<input type='checkbox' class='passive-activate' data-skill='"+n+"'>");c.click(function(){i.toggleClass("skill-activated"),M()}),l.append("Activate ",c).hide(),y.append($("<li/>").html(o.clone())),i.append(o,l,u,a,f),e.append(i)}}),M()}function P(){f.empty(),f.append($("<ul class='resist-specific'/>").append(e("EHP",C.ehp,"round"),e("EHP w/ Dodge",C["ehp-dodge"],"round"),e("EHP w/ Block","Not Implemented"))),f.append($("<ul class='resist-specific'/>").append($("<li class='header'/>").html("VS Damage Source EHP"),e("Melee EHP",C["ehp-melee"],"round"),e("Ranged EHP",C["ehp-range"],"round"),e("Elite EHP",C["ehp-elite"],"round"))),f.append($("<ul class='resist-specific'/>").append($("<li class='header'/>").html("VS Specific Element EHP"),e("Physical EHP",C["ehp-physical"],"round"),e("Cold EHP",C["ehp-cold"],"round"),e("Fire EHP",C["ehp-fire"],"round"),e("Lightning EHP",C["ehp-lightning"],"round"),e("Poison EHP",C["ehp-poison"],"round"),e("Arcane/Holy EHP",C["ehp-arcane"],"round")));var i=$("#build-active-skills");$.each(C.skillData,function(t,n){var r=i.find('li[data-id="'+t+'"] ul.details').empty();$.each(n,function(t,n){switch(t){case"per-tick-norm":r.append(e("Per Tick",n,"round"));break;case"per-tick-crit":r.append(e("Critical Per Tick",n,"round"));break;case"total-damage-norm":r.append(e("Total Damage",n,"round"));break;case"total-damage-crit":r.append(e("Critical Total Damage",n,"round"));break;case"3rd-hit":r.append(e("Average 3rd Hit",n,"round"));break;case"per-tick":r.append(e("DPS",n,"round"));break;case"total-damage":r.append(e("Total Damage per Cast",n,"round"));break;case"average-hit":r.append(e("Average Hit",n));break;case"damage-tick":r.append(e("Per Tick",n));break;case"damage":r.append(e("Damage Range",n));break;case"dps":r.append(e("DPS",n));break;case"critical-hit":r.append(e("Crit Damage Range",n));break;case"critical-hit-tick":r.append(e("Per Tick Crit Damage",n))}})}),r.empty(),r.append(e("Strength",C.strength)),r.append(e("Dexterity",C.dexterity)),r.append(e("Intelligence",C.intelligence)),r.append(e("Vitality",C.vitality)),r.append(e("Magic Find",C["plus-magic-find"],"per")),r.append(e("Gold Find",C["plus-gold-find"],"per")),n.empty(),n.append(e("Armor",C.armor,"round",C.armorReduce)),n.append(e("All Resist",C["resist-all"],"round",C["percent-resist-all"])),n.append(e("Block Chance",C["block-chance"],"per")),n.append(e("Dodge Chance",C["dodge-chance"],"per")),n.append(e("Damage Reduction",C.armorReduction,"per")),n.append(e("Physical Resistance",C["resist-physical"],"round",C["percent-resist-physical"])),n.append(e("Cold Resistance",C["resist-cold"],"round",C["percent-resist-cold"])),n.append(e("Fire Resistance",C["resist-fire"],"round",C["percent-resist-fire"])),n.append(e("Lightning Resistance",C["resist-lightning"],"round",C["percent-resist-lightning"])),n.append(e("Poison Resistance",C["resist-poison"],"round",C["percent-resist-poison"])),n.append(e("Arcane/Holy Resistance",C["resist-arcane"],"round",C["percent-resist-arcane"])),n.append(e("Crowd Control Reduction",C["cc-reduce"]?C["cc-reduce"]:0,"per")),n.append(e("Missile Damage Reduction",C["percent-range-reduce"],"per")),n.append(e("Melee Damage Reduction",C["percent-melee-reduce"],"per")),n.append(e("Elite Damage Reduction",C["percent-elite-reduce"],"per")),n.append(e("Thorns",C.thorns)),t.empty(),t.append(e("DPS",C.dps,"round")),t.append(e("Attacks per Second",C["dps-speed-display"])),t.append(e("Critical Hit Chance",C["critical-hit"],"per")),t.append(e("Critical Hit Damage",C["critical-hit-damage"],"per")),a.empty(),a.append($("<li class='header'/>").html("DPS Gained per Stat")),a.append(e("+1 Primary Stat",C["dps-pt-primary"],"round")),a.append(e("+1% Crit Hit",C["dps-pt-critical-hit"],"round")),a.append(e("+1% Crit Hit Dmg",C["dps-pt-critical-hit-damage"],"round")),a.append(e("+1 Minimum Dmg",C["dps-pt-min-damage"],"round")),a.append(e("+1 Maximum Dmg",C["dps-pt-max-damage"],"round")),a.append(e("+1% Attack Speed",C["dps-pt-attack-speed"],"round")),u.empty(),u.append($("<li class='header'/>").html("EHP Gained per Stat")),u.append(e("+1 Armor",C["ehp-pt-armor"],"round")),u.append(e("+1 Strength",C["ehp-pt-strength"],"round")),u.append(e("+1 Intelligence",C["ehp-pt-intelligence"],"round")),u.append(e("+1 Vitality",C["ehp-pt-vitality"],"round")),u.append(e("+1 Resist All",C["ehp-pt-resist-all"],"round")),u.append(e("+1% Life",C["ehp-pt-plus-life"],"round")),s.empty(),s.append(e("Maximum Life",C.life,"round")),s.append(e("Total Life Bonus",C["plus-life"],"per")),s.append(e("Life per Second",C["life-regen"]?C["life-regen"]:0)),s.append(e("Life Steal",C["life-steal"]?C["life-steal"]:0,"per")),s.append(e("Life per Kill",C["life-kill"]?C["life-kill"]:0)),s.append(e("Life per Hit",C["life-hit"]?C["life-hit"]:0)),s.append(e("Health Globe Healing Bonus",C["health-globes"]?C["health-globes"]:0)),s.append(e("Bonus to Gold/Globe Radius",C["plus-pickup-radius"]?C["plus-pickup-radius"]:0));var o=$("<ul class='resist-specific'/>").append($("<li class='header'/>").html("Gear EHP Contributions (<a href='/faq/gear-based-ehp'>?</a>)"));o.append(e("Helm EHP",C["ehp-helm"],"round")),o.append(e("Shoulder EHP",C["ehp-shoulders"],"round")),o.append(e("Amulet EHP",C["ehp-amulet"],"round")),o.append(e("Chest EHP",C["ehp-chest"],"round")),o.append(e("Gloves EHP",C["ehp-gloves"],"round")),o.append(e("Bracers EHP",C["ehp-bracers"],"round")),o.append(e("Belt EHP",C["ehp-belt"],"round")),o.append(e("Pants EHP",C["ehp-pants"],"round")),o.append(e("Ring 1 EHP",C["ehp-ring1"],"round")),o.append(e("Ring 2 EHP",C["ehp-ring2"],"round")),o.append(e("Boots EHP",C["ehp-boots"],"round")),o.append(e("Main Hand EHP",C["ehp-mainhand"],"round")),o.append(e("Off Hand EHP",C["ehp-offhand"],"round")),$("#stats-ehp-gear").html(o);var l=$("<ul class='resist-specific'/>").append($("<li class='header'/>").html("Gear DPS Contributions (<a href='/faq/gear-based-dps'>?</a>)"));l.append(e("Helm DPS",C["dps-helm"],"round")),l.append(e("Shoulder DPS",C["dps-shoulders"],"round")),l.append(e("Amulet DPS",C["dps-amulet"],"round")),l.append(e("Chest DPS",C["dps-chest"],"round")),l.append(e("Gloves DPS",C["dps-gloves"],"round")),l.append(e("Bracers DPS",C["dps-bracers"],"round")),l.append(e("Belt DPS",C["dps-belt"],"round")),l.append(e("Pants DPS",C["dps-pants"],"round")),l.append(e("Ring 1 DPS",C["dps-ring1"],"round")),l.append(e("Ring 2 DPS",C["dps-ring2"],"round")),l.append(e("Boots DPS",C["dps-boots"],"round")),l.append(e("Main Hand DPS",C["dps-mainhand"],"round")),l.append(e("Off Hand DPS",C["dps-offhand"],"round")),$("#stats-dps-gear").html(l)}function X(e,t,n,r){var i=jQuery.extend({},e),s=E.getItem(n),o=null,u=[];E.init(),E.setClass($("#character").data("class")),E.setParagonLevel($("#paragon-level").text()),$(".equipped a").each(function(){var e=$(this).parent().data("slot"),t=$(this).data("json");E.setItem(e,t)}),E.setPassives(x),E.removeItem(n);switch(t.type){case"2h-mace":case"2h-axe":case"daibo":case"2h-mighty":case"polearm":case"staff":case"2h-sword":$("#equipped-offhand a").length&&(o=JSON.parse($("#equipped-offhand a").attr("data-json")),E.removeItem("offhand"),u.push("We notice you're comparing a two-handed weapon vs your currently equipped mainhand + off-hand items. We've adjusted the comparision slightly so you can see the actual stats between your mainhand + offhand VS the two-hander (without the offhand)."))}E.parseItem(t,n);var a=E.run(),f=E.diff(i,a);$(".compare-diff").empty();if(!r){var l=$("<h4>Comparision Results</h4>").css({margin:0}),c=$("<p/>").append("Old Item: ",E.getItemLink(s)),h=$("<p/>").append("New Item: ",E.getItemLink(t));o&&c.append(" + Offhand: ",E.getItemLink(o))}$(".compare-diff").append(l,c,h),$("#compare-notes").html(""),u.length>0&&$.each(u,function(e,t){$("#compare-notes").append(t)});var p=$("<table/>");header=$("<tr/>").append("<th>Stat</th><th>Diff</th><th>Old</th><th>New</th>"),p.append(header),$.each(f,function(e,t){var n=t.split("|"),r=n[1],s=n[0],o=$("<tr/>");o.append($("<td/>").html(s));var u=Math.round(i[e]*100)/100,f=Math.round(a[e]*100)/100;u>99999&&(u=Math.round(u/10)/100+"k"),f>99999&&(f=Math.round(f/10)/100+"k"),r>0?(o.append($("<td/>").html("+"+r).addClass("pos")),o.append($("<td class='neg'/>").html(u)),o.append($("<td class='pos'/>").html(f))):(o.append($("<td/>").html(r).addClass("neg")),o.append($("<td class='pos'/>").html(u)),o.append($("<td class='neg'/>").html(f))),p.append(o)}),p.append("<tr><td colspan='10'><span class='pos'>Green = Increase</span> / <span class='neg'>Red = Decrease</span></td></tr>"),$(".compare-diff").append(p),E.removeItem(n),E.parseItem(s,n)}$("#item-sim-tab").click(function(){$(".skill-activate").each(function(){$(this).is(":checked")&&($(this).trigger("click"),M())})});var t=$("#stats-offense"),n=$("#stats-defense"),r=$("#stats-base"),s=$("#stats-life"),o=$("#stats-misc"),u=$("#stats-ehp-gains"),a=$("#stats-dps-gains"),f=$("#stats-ehp"),l=$("#stats-ehp-gear"),c=$("#stats-dps-gear"),h=$("#vsLevel"),p=$("#paragonLevel"),d=$("#character").data("class"),v=$("#character").data("owner"),m=$("#skill-display"),g=$("#active-display"),y=$("#passive-display"),b={},w={},E=new d3up.BuildCalculator,S={},x={},T={},N={};E.init(),E.setClass($("#character").data("class")),E.setParagonLevel($("#paragon-level").text()),$(".equipped a").each(function(){var e=$(this).parent().data("slot"),t=$(this).data("json");E.setItem(e,t)}),E.setPassives(x);var C=E.run(),k=[1,2,3,4,5,6],L=[1,2,3],A=$("#skill-chooser");$.each(k,function(e,t){var n=$("<select data-index='"+(t-1)+"' data-placeholder='Select a Skill...' name='activeSelect"+t+"'>"),r=$("<span class='skill-label'>").html("Skill #"+t);n.append("<option value=''>None</option>"),$.each(activeSkills[d],function(e,r){var i=$("<option value='"+e+"'>").html(r.name),s=t-1;activeActives[s]&&activeActives[s]==e&&(i.attr("selected","selected"),b[e]=activeSkills[d][e]),n.append(i)}),A.append($("<p>").append(r,n)),n.chosen({allow_single_deselect:!0}),n.bind("change",function(){var e=$(this).val();activeActives[$(this).data("index")]=e,b[e]=activeSkills[d][e],D()})}),$.each(L,function(e,t){var n=$("<select data-index='"+(t-1)+"' data-placeholder='Select a Skill...' name='passiveSelect"+t+"'>"),r=$("<span class='skill-label'>").html("Passive #"+t);n.append("<option value=''>None</option>"),$.each(passives[d],function(e,r){var i=$("<option value='"+e+"'>").html(e.replace(/\-/g," ").capitalize()),s=t-1;activePassives[s]&&activePassives[s]==e&&(i.attr("selected","selected"),w[e]=passives[d][e]),n.append(i)}),A.append($("<p>").append(r,n)),n.chosen({allow_single_deselect:!0}),n.bind("change",function(){activePassives[$(this).data("index")]=$(this).val(),w[$(this).val()]=passives[d][$(this).val()],D()})});if(v){var O=$("<button>").html("Save Skills");O.click(function(){$.ajax({data:{a:"skills",actives:activeActives,passives:activePassives,stats:{dps:C.dps,ehp:C.ehp},success:function(){$($("<div style='padding: 20px'/>").html("Saved!")).dialog({modal:!0,buttons:{Ok:function(){$(this).dialog("close")}}})}}})})}A.hide(),A.append(O),$(".skill-change").click(function(){A.show()}),h.bind("change",function(){E.setVsLevel($(this).val()),M()}),p.bind("change",function(){$("#paragon-level").html($(this).val()),E.setParagonLevel($(this).val()),M()}),D(),v&&$(".gear-change").click(function(){var e=$(this).data("item-type"),t=$("#equipped-"+e);if(e=="offhand"){var n=$("#equipped-mainhand a").data("json");if(n)switch(n.type){case"2h-mace":case"2h-axe":case"daibo":case"2h-mighty":case"polearm":case"staff":case"2h-sword":return $($("<div style='padding: 20px'/>").html("<p>You're currently wearing a two handed weapon, an offhand isn't allowed.")).dialog({modal:!0,buttons:{Ok:function(){$(this).dialog("close")}}}),!1}}return $.ajax({url:"/item/fetch/type/"+e,cache:!1,dataType:"json",success:function(n){var r=$("#available-gear"),i=$("#gear-change");r.html(""),r.append("<option value=''>Nothing</option>"),$.each(n,function(e,t){var n=$.parseJSON(t),i=$("<option/>");i.attr("value",e),i.attr("data-json",t),i.html(n.name),i.bindTooltip(),r.append(i)}),i.dialog({width:800,modal:!0,buttons:{Equip:function(){var n=$(this);if(r.val()!=""){var i=$("<a/>"),s=r.selectedOption(),o=$.parseJSON(s.attr("data-json"));switch(o.type){case"2h-mace":case"2h-axe":case"daibo":case"2h-mighty":case"polearm":case"staff":case"2h-sword":$("#equipped-offhand").html("Nothing")}i.attr("href","/i/"+r.val()),i.attr("data-json",JSON.stringify(o)),i.addClass("quality-"+o.quality),i.html(o.name),i.bindTooltip(),t.html(i)}else t.html("Nothing");n.dialog("close"),M(),setTimeout(function(){$.ajax({data:{a:"equip",slot:e,newItem:r.val(),stats:{dps:C.dps,ehp:C.ehp}}})},0)},Cancel:function(){$(this).dialog("close")}}})}}),!1}),P(),$("#character").tabs({select:function(e,t){window.location=t.tab.href}}),$(".calc-stats").tabs(),$("#active-display, #passive-display").find("li img").each(function(){$(this).bindSkilltip()});var H=$("#compared-slot"),B=$("#compare-to");B.bind("change",function(){var e=$("#compared-slot").selectedOption().val(),t=$(this).selectedOption().data("json");X(C,t,e)}),H.bind("change",function(){var e=$(this).val();M(),$.ajax({url:"/item/fetch/type/"+e,cache:!1,dataType:"json",success:function(e){B.html(""),B.append("<option value=''>Nothing</option>"),$.each(e,function(e,t){var n=$.parseJSON(t),r=$("<option/>");r.attr("value",e),r.attr("data-json",t),r.html(n.name),r.bindTooltip(),B.append(r)})}})});var j=$("#simulate-slot"),F=!1,I=!1,q=!1,R=$("#simulate-stats"),U=$("#simulate-attributes"),z=$("#simulate-sliders"),W=!1;$("#simulation-stats").hide(),j.bind("change",function(){M(),U.val(""),W=jQuery.extend({},C),q=!1,F=$(this).val(),q=$("#equipped-"+F+" a").data("json"),$.each(q.attrs,function(e,t){t==0&&delete q.attrs[e];var n=$("#simulate-stats ul.attrs input[name="+e+"]");n&&n.val(t)});var e=R.find(".stats-primary .big-stat").empty(),t=R.find(".stats-primary .stat-helper").empty(),n=R.find(".stats-extra-percent").empty(),r=R.find(".stats-extra-range").empty(),s=R.find("ul.sockets").empty();if(q.sockets)for(i=0;i<q.sockets.length;i++){var o=$("<select class='sockets' name='socket"+i+"' style='width: 300px'><option value=''>None</option></select>"),u="unknown";$.each(gems,function(e,t){var n=!1;q.sockets[i]==e&&(n=!0);switch(q.type){case"spirit-stone":case"voodoo-mask":case"wizard-hat":case"helm":effectNum=1,u=t[1];break;case"2h-mace":case"2h-axe":case"bow":case"daibo":case"crossbow":case"2h-mighty":case"polearm":case"staff":case"2h-sword":case"axe":case"ceremonial-knife":case"hand-crossbow":case"dagger":case"fist-weapon":case"mace":case"mighty-weapon":case"spear":case"sword":case"wand":effectNum=2,u=t[2];break;case"shield":case"belt":case"boots":case"bracers":case"chest":case"cloak":case"gloves":case"pants":case"mighty-belt":case"shoulders":effectNum=3,u=t[3];break;default:effectNum=3,u=t[3]}var r=$("<option value='"+e+"'>"+t[0]+" ("+u+")</option>");n&&r.attr("selected","selected"),o.append(r)}),o.bind("change",function(){q.socketAttrs={},R.find("select.sockets").each(function(e,t){if(gemEffect[$(this).val()]){var n=gemEffect[$(this).val()][effectNum];q.socketAttrs[n[0]]?q.socketAttrs[n[0]]+=n[1]:q.socketAttrs[n[0]]=n[1]}}),E.init(),E.setClass($("#character").data("class")),E.setParagonLevel($("#paragon-level").text()),$(".equipped a").each(function(){var e=$(this).parent().data("slot"),t=$(this).data("json");E.setItem(e,t)}),E.setPassives(x),E.removeItem(F),E.parseItem(q,F),C=E.run(),X(W,q,F,!0),P()}),s.append($("<li>").html(o))}q.stats&&$.each(q.stats,function(i,s){var o=$("<input name='"+i+"' type='text'/>");o.val(s);switch(i){case"armor":e.html(o),t.html("Total Armor");break;case"block-amount":var u=$("<input name='"+i+"-min' type='text'/>"),a=$("<input name='"+i+"-max' type='text'/>");u.val(s.min),a.val(s.max),r.append(u,"-",a).append(" Block Amount");break;case"block-chance":n.html(o).append(" Block Chance");break;case"dps":e.html("<span id='simulated-dps'>"+s+"</span>"),t.html("Damage Per Second");break;case"speed":n.html(o).append(" Attack Speed");break;case"damage":var f=$("<input name='"+i+"-min' type='text'/>"),l=$("<input name='"+i+"-max' type='text'/>");f.val(s.min),l.val(s.max);function c(){switch($(this).attr("name")){case"damage-min":q.stats.damage.min=$(this).val()?parseFloat($(this).val()):0;break;case"damage-max":q.stats.damage.max=$(this).val()?parseFloat($(this).val()):0;break;default:return!1}var e=(q.stats.damage.min+q.stats.damage.max)/2*q.stats.speed;return $("#simulated-dps").html(Math.round(e*10)/10),E.init(),E.setClass($("#character").data("class")),E.setParagonLevel($("#paragon-level").text()),$(".equipped a").each(function(){var e=$(this).parent().data("slot"),t=$(this).data("json");E.setItem(e,t)}),E.setPassives(x),E.removeItem(F),E.parseItem(q,F),C=E.run(),X(W,q,F,!0),P(),!1}f.bind("keyup",c),l.bind("keyup",c),r.append(f,"-",l).append(" Damage");break;default:}o.bind("keyup",function(){switch(i){case"block-chance":q.stats[$(this).attr("name")]=$(this).val()?parseFloat($(this).val()):0;break;default:q.stats[$(this).attr("name")]=$(this).val()?parseFloat($(this).val()):0;if(i=="speed"){var e=(q.stats.damage.min+q.stats.damage.max)/2*q.stats.speed;$("#simulated-dps").html(Math.round(e*10)/10)}}E.init(),E.setClass($("#character").data("class")),E.setParagonLevel($("#paragon-level").text()),$(".equipped a").each(function(){var e=$(this).parent().data("slot"),t=$(this).data("json");E.setItem(e,t)}),E.setPassives(x),E.removeItem(F),E.parseItem(q,F),C=E.run(),X(W,q,F,!0),P()})}),q.attrs&&$.each(q.attrs,function(e,t){U.find("option[value="+e+"]").attr("selected","selected")}),$("#simulate-stats ul.stats").empty(),U.trigger("liszt:updated"),U.trigger("change"),$("#simulation-stats").show()}),U.bind("change",function(){var e=$(this).val(),t=$("#simulate-stats ul.attrs");e&&$.each(e,function(e,n){if(n!=""){var r=t.find("."+n);if(td[n]&&!r.length){var i=q.attrs[n]?q.attrs[n]:0;typeof i=="object"&&(i=i.min+"-"+i.max);var s=$("<li></li>"),o=td[n],u="<input type='text' name='"+n+"' value='"+i+"' tabindex='100'/>";o=o.replace("VVV",u),s.append(o),s.find("input").bind("keyup",function(){if(_.indexOf(["minmax-damage","arcane-damage","cold-damage","fire-damage","holy-damage","lightning-damage","poison-damage"],n)>=0){var e=$(this).val().split("-");q.attrs[$(this).attr("name")].min=e[0],q.attrs[$(this).attr("name")].max=e[1]}else q.attrs[$(this).attr("name")]=$(this).val()?$(this).val():0;E.init(),E.setClass($("#character").data("class")),E.setParagonLevel($("#paragon-level").text()),$(".equipped a").each(function(){var e=$(this).parent().data("slot"),t=$(this).data("json");E.setItem(e,t)}),E.setPassives(x),E.removeItem(F),E.parseItem(q,F),C=E.run(),X(W,q,F,!0),P()}),s.addClass(n),t.append(s)}}}),t.find("li").each(function(){if(!e||e.indexOf($(this).attr("class"))==-1)q.attrs[$(this).attr("class")]=0,E.init(),E.setClass($("#character").data("class")),E.setParagonLevel($("#paragon-level").text()),$(".equipped a").each(function(){var e=$(this).parent().data("slot"),t=$(this).data("json");E.setItem(e,t)}),E.setPassives(x),E.removeItem(F),E.parseItem(q,F),C=E.run(),X(W,q,F,!0),P(),$(this).remove()})}),U.chosen();var V=$("#button-upvote"),J=$("#button-downvote");if(isLoggedIn){V.attr("data-tooltip","Do you find this build useful or just simply awesome? Give them an upvote!"),J.attr("data-tooltip","Is this build not useful at all or full of made-up things? Feel free to downvote.");switch(voted){case"up":V.removeClass("ui-state-disabled");break;case"down":J.removeClass("ui-state-disabled")}V.click(function(){K("up")}),J.click(function(){K("down")});function K(e){$.ajax({url:"?vote="+e});var t=0;e=="up"?(V.hasClass("ui-state-disabled")?J.hasClass("ui-state-disabled")?t=1:t=2:t=-1,V.toggleClass("ui-state-disabled"),J.addClass("ui-state-disabled")):(J.hasClass("ui-state-disabled")?V.hasClass("ui-state-disabled")?t=-1:t=-2:t=1,V.addClass("ui-state-disabled"),J.toggleClass("ui-state-disabled")),$("#vote-count").html(parseInt($("#vote-count").text(),10)+t).attr("data-count",t)}}V.bindSkilltip(),J.bindSkilltip();var Q=$(".saveStats");Q.attr("data-name","Manual Stats Save"),Q.attr("data-tooltip","Manually save the stats from the right (stats) panel of your build to the database.<br/><br/>This happens automatically on a skill change or item change, but if for some reason you're stats aren't updating, hit this."),Q.bindSkilltip(),Q.click(function(){$.ajax({data:{a:"skills",actives:activeActives,passives:activePassives,stats:{dps:C.dps,ehp:C.ehp},success:function(){$($("<div style='padding: 20px'/>").html("Saved!")).dialog({modal:!0,buttons:{Ok:function(){$(this).dialog("close")}}})}}})})})