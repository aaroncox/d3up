<?
	$this->headTitle('Character Builds & Guides'); 
?>
<div class="recent-builds content-page">				
	<div class="page">
		<div class="controls">
			<a class="button" id="advSearch">Advanced Search</a>
		</div>
		<div class="controls chosen">
			<select id="classSelect" data-placeholder="Filter by Class">
				<option value=""></option>
				<option value="">All Classes</option>
				<option value="barbarian">Barbarian</option>
				<option value="demon-hunter">Demon Hunter</option>
				<option value="monk">Monk</option>
				<option value="witch-doctor">Witch Doctor</option>
				<option value="wizard">Wizard</option>
			</select>
		</div>
		<script type="text/javascript">
			<? if($this->class): ?>
				$("#classSelect option[value=<?= $this->class ?>]").attr("selected", "selected");
			<? endif?>
			$("#classSelect").chosen({allow_single_deselect: true});
		</script>
		<h2 class="ui-table-header">Character Builds</h2>
		<div class="form" id="advSearchPanel">
			<table class="filter-table">
				<tr>
					<td>Builds using Skills:</td>
					<td><select id="advSkillSearch" multiple="multiple" data-placeholder="Select Skills"></select></td>
				</tr>
				<tr>
					<td>Builds using Passives:</td>
					<td><select id="advPassiveSearch" multiple="multiple" data-placeholder="Select Passives"></select></td>
				</tr>
			</table>
		</div>
	</div>
	<table id="all-builds" class="d3up-table">
		<tbody>
			<tr>
				<td colspan="10" class="build-paginator td-paginator">
					<?php echo $this->paginationControl($this->builds,
					                                    'Elastic',
					                                    'build/_pages.phtml',
																							array(
																								'class' => $this->class,
																								'sortBy' => $this->sortBy,
																								'selectedActives' => $this->selectedActives,
																								'selectedPassives' => $this->selectedPassives,
																							)); ?>
				</td>
			</tr>
			<tr>
				<?
					$params = "";
					if($this->class) {
						$params .= "&class=".$this->class;
					}
					if($this->selectedActives) {
						$params .= "&skills=".$this->selectedActives;
					}
					if($this->selectedPassives) {
						$params .= "&passives=".$this->selectedPassives;
					}
				?>
				<th></th>
				<th><a href="?sort=votes<?= $params ?>">Votes</a></th>
				<th><a href="?sort=views<?= $params ?>">Views</a></th>
				<th><a href="?sort=name<?= $params ?>">Name</a></th>
				<th>Skills</th>
				<th><a href="?sort=dps<?= $params ?>">DPS</a></th>
				<th><a href="?sort=ehp<?= $params ?>">EHP</a></th>
			</tr>
		<? foreach($this->builds as $build): ?>
			<tr class='build-row'>
				<td class="icon"><img src="/images/<?= $build->class ?>.png"/></td>
				<td class="stat">
					<? if($build->votes): ?>
						<? if($build->votes > 0): ?>+<? endif ?><?= $this->prettyStat($build->votes) ?>
					<? else: ?>	
						-
					<? endif ?>
				</td>
				<td class="stat"><?= $this->prettyStat($build->views) ?></td>
				<td class="name"><?= $this->mLink($build) ?></td>
				<td class="skills">
					<? if($build->actives): ?>
						<? foreach($build->actives as $active): ?>
							<? 
								if($active == "undefined") {
									?>
									<img data-class="<?= $build->class ?>" src="/images/icons/unknown.png" class="skill-tip"/>
									<?
									continue;
								}
								$explode = explode("~", $active);
								$skill = $explode[0];
							?>
							<img data-class="<?= $build->class ?>" data-id="<?= $active ?>" data-class="<?= $build->class ?>" src="/images/icons/<?= $build->class ?>-<?= $skill ?>.png" class="skill-tip"/>
						<? endforeach ?>
					<? endif ?>
					<? if($build->passives): ?>
						<? foreach($build->passives as $passive): ?>
							<? 
								$explode = explode("~", $passive);
								$skill = $explode[0];
							?>
							<img data-class="<?= $build->class ?>" data-id="<?= $passive ?>" src="/images/icons/<?= $build->class ?>-<?= $skill ?>.png" class="skill-tip"/>
						<? endforeach ?>
					<? endif ?>
				</td>
				<td class="stat"><?= $this->prettyStat($build->stats['dps']) ?></td>
				<td class="stat"><?= $this->prettyStat($build->stats['ehp']) ?></td>
			</tr>
		<? endforeach; ?>
			<tr>
				<td colspan="10" class="build-paginator td-paginator">
					
					<?php echo $this->paginationControl($this->builds,
					                                    'Elastic',
					                                    'build/_pages.phtml',
																							array(
																								'class' => $this->class,
																								'sortBy' => $this->sortBy,
																								'selectedActives' => $this->selectedActives,
																								'selectedPassives' => $this->selectedPassives,
																							)); ?>
				</td>
			</tr>
		</tbody>
	</table>
</div>
<? if(!$this->noScript): ?>
<script type="text/javascript">
	$(function() {
		var advSearch = $("#advSearch"),
				advSearchPanel = $("#advSearchPanel"),
				advSkillSearch = $("#advSkillSearch"),
				advPassiveSearch = $("#advPassiveSearch"),
				classSelect = $("#classSelect");
		advSearch.click(function() {
			if(advSearchPanel.is(":visible")) {
				advSearchPanel.hide();
			} else {
				advSearchPanel.show();
			}
		});
		$.each(activeSkills, function(heroClass, data) {
			$.each(data, function(k,v) {
				var option = $("<option>");
				option.html(v.name);
				option.attr("value", k);
				advSkillSearch.append(option);
			});
		});
		$.each(passives, function(heroClass, data) {
			$.each(data, function(k,v) {
				var option = $("<option>");
				option.html(k.replace(/-/g, " ").capitalize());
				option.attr("value", k);
				advPassiveSearch.append(option);
			});
		});
		<? foreach(explode("|", $this->selectedActives) as $active): ?>
			advSkillSearch.find("option[value='<?= $active ?>']").attr("selected", "selected");
		<? endforeach ?>
		<? foreach(explode("|", $this->selectedPassives) as $passive): ?>
			advPassiveSearch.find("option[value=<?= $passive ?>]").attr("selected", "selected");
		<? endforeach ?>
		advSkillSearch.chosen();
		advPassiveSearch.chosen();
		<? if(empty($this->selectedPassives) && empty($this->selectedActives)): ?>
		advSearchPanel.hide();
		<? endif ?>
		$(".build-paginator a").bind('click', setupPaginator);
		advSkillSearch.bind('change', searchBuilds);
		advPassiveSearch.bind('change', searchBuilds);
		classSelect.bind('change', searchBuilds);
		function searchBuilds() {
			var skills = advSkillSearch.val(),
					passives = advPassiveSearch.val(), 
					heroClass = classSelect.val();
			if(skills && skills.length) {
				skills = skills.join("|");
			}
			if(passives && passives.length) {
				passives = passives.join("|");
			}
			$.ajax({
				data: {
					skills: skills,
					passives: passives,
					class: heroClass,
				},
				success: function(data) {
					var content = $(data);
					$("#all-builds").replaceWith(content.find("#all-builds"));
					$(".build-paginator a").bind('click', setupPaginator);
					$("td.skills img").each(bindAllSkilltips);
				}
			});
		}
		$("td.skills img").each(function() {
			if($(this).data("id") && $(this).data("id") != "undefined") {
				var skill = activeSkills[$(this).attr("data-class")][$(this).attr("data-id")];
				if(!skill) {
					skill = passives[$(this).attr("data-class")][$(this).attr("data-id")];
					if(skill) {
  					skill.name = $(this).attr("data-id").replace(/\-/g," ").capitalize();					  
					}
				}
				if(skill) {
  				var tooltip = skill.desc;
					if(skill.rune) {
						tooltip = tooltip + "<br/><br/>" + skill.rune;
					}
					$(this).attr("data-name", skill.name);
					$(this).attr("data-tooltip", tooltip);
					$(this).bindSkilltip();				
				}				
			}
		});
		function setupPaginator() {
			var resultsTable = $(".recent-builds table#all-builds tbody"),
					link = $(this).prop("href");
			resultsTable.addClass("ui-state-disabled");
			$.ajax({
				url: link,
				type: 'html',
				success: function(data) {
					var results = $("<div/>").append(data);
					resultsTable.replaceWith(results.find(".recent-builds table#all-builds tbody"));
					$(".build-paginator a").bind('click', setupPaginator);
					$("td.skills img").each(bindAllSkilltips);
				}
			});
			return false;
		};
		function bindAllSkilltips() {
			var skill = activeSkills[$(this).attr("data-class")][$(this).attr("data-id")];
			if(!skill) {
				skill = passives[$(this).attr("data-class")][$(this).attr("data-id")];
				if(skill != "undefined" && $(this).attr("data-id").length) {
					skill.name = $(this).attr("data-id").replace(/\-/g," ").capitalize();				
				}
			}
			if(skill) {
				var tooltip = skill.desc;
				if(skill.rune) {
					tooltip = tooltip + "<br/><br/>" + skill.rune;
				}
				$(this).attr("data-name", skill.name);
				$(this).attr("data-tooltip", tooltip);
				$(this).bindSkilltip();				
			}
		}
	});
</script>
<? endif ?>