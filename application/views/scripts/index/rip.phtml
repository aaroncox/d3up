<script type="text/javascript" src="http://code.jquery.com/jquery-1.7.2.js"></script>
<script type="text/javascript" src="/js/d3db.js"></script>
<script type="text/javascript">
	// Stopped on Caltrops
	$(function() {
		var skills = {
			'undefined': [],
			'barbarian': [],
			'demon-hunter': [],
			'monk': [],
			'witch-doctor': [],
			'wizard': [],
			'enchantress': [],
			'templar': [],
			'scoundrel': []
		};
		var map = {"\b":" ", "\t":" ", "\n":" ", "\v":" ", "\f":" ", "\r":" ", "'": "\\'"};
		$.each(tooltips, function(k,v) {
			var newSkill = {};
			// target.append("\r" + v.slug + ": {");
			var html = $(v.tooltip);
			newSkill.name = html.find("#d3tt_nameset").html().replace(/[\b\t\n\v\f\r']/g, function(val) { return map[val]; });
			newSkill.class = 'undefined';
			if(html.text().indexOf("Wizard") > 0) {
				newSkill.class = 'wizard';
			}
			if(html.text().indexOf("Demon Hunter") > 0) {
				newSkill.class = 'demon-hunter';
			}
			if(html.text().indexOf("Monk") > 0) {
				newSkill.class = 'monk';
			}
			if(html.text().indexOf("Barbarian") > 0) {
				newSkill.class = 'barbarian';
			}
			if(html.text().indexOf("Witch Doctor") > 0) {
				newSkill.class = 'witch-doctor';
			}
			if(html.text().indexOf("Enchantress") > 0) {
				newSkill.class = 'enchantress';
			}
			if(html.text().indexOf("Templar") > 0) {
				newSkill.class = 'templar';
			}
			if(html.text().indexOf("Scoundrel") > 0) {
				newSkill.class = 'scoundrel';
			}
			if(newSkill.class == 'undefined') {
				console.log(html.text());				
			}
			newSkill.slug = v.slug.replace(/[\b\t\n\v\f\r']/g, function(val) { return map[val]; });
			newSkill.icon = $(v.tooltip).find("img").attr("src");
			var effectMap = [
				{
					find: [
						/Cost: (\d+) Fury/
					],
					effect: 'cost-fury',
					removeTip: true
				},
				{
					find: [
						/Cost: (\d+) Hatred/
					],
					effect: 'cost-hatred',
					removeTip: true
				},
				{
					find: [
						/Cost: (\d+) Discipline/
					],
					effect: 'cost-discipline',
					removeTip: true
				},
				{
					find: [
						/Cost: (\d+) Spirit/
					],
					effect: 'cost-spirit',
					removeTip: true
				},
				{
					find: [
						/with a (\d+)% chance to Knockback/
					],
					effect: 'chance-knockback',
				},
				{
					find: [
						/Generate: (\d+) Fury per attack/,
						/Generate (\d+) additional Fury/,
						/Generate: (\d+) Fury/,
						/Gain (\d+) Fury/
					],
					effect: 'generate-fury',
					removeTip: true
				},
				{
					find: [
						/Generate: (\d+) Hatred/,
						/While invisible you gain (\d+) Hatred per second/
					],
					effect: 'generate-hatred',
					removeTip: true
				},
				{
					find: [
						/Generate: (\d+) Spirit per attack/
					],
					effect: 'generate-spirit',
					removeTip: true
				},
				{
					find: [
						/Cooldown: (\d+) seconds/
					],
					effect: 'cooldown',
					removeTip: true
				},
				{
					find: [
						/damage of your skills by (\d+)% for 5 seconds after using Bash/
					],
					effect: 'damage-buff',
					multiple: 3
				},
				{
					find: [
						/Reduces all damage taken by (\d+)%/,
						/reducing damage done by enemies within 25 yards by (\d+)%/,
						/Reduce incoming damage by (\d+)% while Shadow Power/,
						/that reduces damage taken by allies by (\d+)%/
					],
					effect: 'damage-reduce'
				},
				{
					find: [
						/have a (\d+)% chance to be stunned/,
						/Add a (\d+)% chance to call down a bolt of lightning from above, stunning/,
						/Add a (\d+)% chance of stunning/,
						/(\d+)% chance to Stun/,
					],
					effect: 'chance-stun'
				},
				{
					find: [
						/Increases Dodge Chance by (\d+)% while sprinting/,
						/also grants a (\d+)% bonus to Dodge Chance/,
						/Dodge Chance: (\d+)%/
					],
					effect: 'plus-dodge'
				},
				{
					find: [
						/Movement Speed: (\d+)%/
					],
					effect: 'plus-movement-speed'
				},
				{
					find: [
						/All of your resistances are increased by (\d+)%/,
					],
					effect: 'plus-resist-all'
				},
				{
					find: [
						/Enemies in the area also take (\d+)% weapon damage/,
						/shockwave that inflicts (\d+)% weapon damage/,
						/for (\d+)% weapon damage/,
						/a shockwave that deals (\d+)% weapon damage/,
						/deal (\d+)% weapon damage/,
						/dealing (\d+)% weapon damage to all/,
						/and dealing (\d+)% weapon damage/,
						/destruction that deals (\d+)% weapon damage/,
						/Inflict (\d+)% weapon damage to all nearby enemies/,
						/each one inflicting (\d+)% weapon damage/,
						/and inflicting (\d+)% weapon damage/,
						// /Shake the ground violently, dealing (\d+)% weapon damage/,
						/Each deals (\d+)% weapon damage per swing/,
						/Deal (\d+)% weapon damage to all targets/,
						/and deals (\d+)% weapon damage/,
						/Light the arrow on fire, dealing (\d+)% additional weapon damage/,
						/that deals (\d+)% weapon damage/,
						/that do an additional (\d.+)% weapon damage/,
						/dealing (\d+)% weapon damage as Fire/,
						/that does (\d+)% weapon damage as/,
						/doing (\d+)% weapon damage to all/,
						/trap does (\d+)% weapon damage/,
						/periodically peck at enemies for (\d+)% of your weapon damage/,
						/firing at nearby enemies for (\d+)%/,
						/the sky dealing (\d.+)% weapon damage/
					],
					effect: 'weapon-damage'
				},
				{
					find: [
						/weapon damage for (\d+) seconds/,
					],
					effect: 'weapon-damage-for'
				},
				{
					find: [
						/Add 2 reverberations that cause (\d.+)%/
					],
					effect: 'weapon-damage',
					multiple: 2
				},
				{
					find: [
						/launch 3 homing rockets every second. Each rocket deals (\d+)% weapon damage/
					],
					effect: 'weapon-damage',
					multiple: 3
				},
				{
					find: [
						/Summon 20 Shadow Beasts to drop bombs on enemies, dealing (\d+)% weapon damage each/
					],
					effect: 'weapon-damage',
					multiple: 20,
					remove: 'weapon-damage-for'
				},
				{
					find: [
						/has a (\d+)% increased Critical Hit Chance/,
						/your Critical Hit Chance is increased by (\d+)%/,
						/which increases damage by 15% and Critical Hit Chance by (\d+)%/,
						/Your Critical Hit Chance is increased by (\d+)%/,
						/Critical Hit Chance: (\d+)%/,
						/gaining an additional (\d+)% Critical Hit Chance with all/
					],
					effect: 'plus-crit-hit'
				},
				{
					find: [
						/Critical Hits cause (\d+)% additional damage/,
						/that do an extra (\d+)% damage on successful Critical Hits/
					],
					effect: 'plus-crit-hit-damage'
				},
				{
					find: [
						/Enter a rage which increases damage by (\d+)%/	,
						/While active your damage is also increased by (\d+)%/				
					], 
					effect: 'plus-damage'
				},
				{
					find: [
						/Each Frenzy effect also increases your damage by (\d+)%/
					],
					effect: 'plus-damage',
					multiple: 5
				},
				{
					find: [
						/Attack Speed: (\d+)%/,
						/Increases your attack speed by (\d+)% when using Strafe/
					],
					effect: 'plus-attack-speed'
				},
				{
					find: [
						/Frenzy attack speed increases by (\d+)% with each swing/,
					],
					effect: 'plus-attack-speed',
					multiple: 5
				},
				{
					find: [
						/rallying cry to increase Armor for you and all allies within 50 yards by (\d+)%/
					],
					effect: 'plus-armor'
				},
				{
					find: [
						/Increases maximum Life by (\d+)%/
					],
					effect: 'plus-life'
				},
				{
					find: [
						/regenerates (\d.+) Life per second/
					],
					effect: 'plus-life-regen'
				},
				{
					find: [
						/Gain (\d+)% of the damage done by Rend as Life/,
						/Gain Life equal to (\d+)% of the damage/,
						/gain (\d+)% of all damage dealt as Life/,
						/Gain (\d+)% of the damage dealt as Life/,
						/gaining (\d+)% of all damage done/,
						/path and return (\d+)% of damage dealt as Life for/,
						/Heal attackers for (\d+)% of the damage/,
						/You will gain (\d+)% of the damage done as Life/
					],
					effect: 'life-steal'
				},
				// Remove Attribute Effects Below
				{
					find: [
						/Removes the Discipline cost/
					],
					remove: 'cost-discipline'
				},
				{
					find: [
						/Removes the chance for Knockback/
					],
					remove: 'chance-knockback',
				},
				{
					find: [
						/Removes the Fury cost/
					],
					remove: 'cost-fury'
				},
				// Remove and Replace Effects Below
				{
					find: [
						/Instead of Knockback, each hit has a (\d+)% chance to Stun/
					],
					effect: 'chance-stun',
					remove: 'chance-knockback'
				},
				{
					find: [
						/Increases damage done as Life to (\d+)%/
					],
					effect: 'life-steal',
					remove: 'life-steal'
				},
				{
					find: [
						/Increase damage to (\d+)% weapon damage/,
						/Increase damage to (\d.+)% weapon damage/,
						/Strike a smaller area for (\d+)% weapon damage./,
						/damage is increased to (\d+)% weapon damage/,
						/Focus the seismic shockwaves along a narrow path to inflict (\d+)% weapon damage/,
						/Increase thrown weapon damage to (\d+)% weapon damage/,
						/Increase damage at the destination to (\d+)% weapon damage/,
						/The Ancients inflict (\d+)% weapon damage/,
						/Rapidly fire grenades that explode for (\d+)% weapon damage/,
						/Shoot 3 bolas that each deal (\d+)% weapon damage as Poison/,
						/Augment the bola to deal (\d+)% weapon damage as Arcane/,
						/The Chakram path turns into a loop, dealing (\d+)% weapon damage/,
						/The Chakram follows a slow curve, dealing (\d+)% weapon damage/,
						/The Chakram spirals out from the targeted location dealing (\d+)% weapon damage as/,
						/Surround yourself with spinning Chakrams for 120 seconds, dealing (\d+)% weapon damage per/,
						/that hit up to 3 targets for (\d+)% weapon damage each/,
						/Throw gas grenades that explode for (\d+)% weapon damage/,
						/Throw cluster grenades that deal (\d+)% weapon damage/,
						/Throw a single grenade that deals (\d+)% weapon/,
						/Surround yourself with whirling blades that deal (\d+)% weapon damage/,
						/but increases damage to (\d+)% weapon damage/,
						/bounce to up to 3 enemies for (\d+)% weapon damage/,
						/Throw out bouncy grenades that explode for (\d+)% weapon damage/,
						/that electrocutes enemies along its path for (\d+)% weapon damage/,
						/Shadow tentacles deal (\d+)% weapon damage to enemies along/,
						/damage of Multishot to (\d+)% weapon/,
						/shoots up to 3 rockets at nearby enemies dealing (\d+)% weapon damage/,
						/dropping bombs in a straight line that each explode for (\d+)% weapon damage/,
						/releases shadow energy that deals (\d+)% weapon damage/,
						/guided arrows that rain down on enemies for (\d+)% weapon damage/,
						/from the sky for 10 seconds dealing (\d+)% weapon damage/
					], 
					effect: 'weapon-damage',
					remove: 'weapon-damage'
				},
				{
					find: [
						/A second Chakram mirrors the first.  Each Chakram deals (\d+)% weapon damage as Physical./
					],
					effect: 'weapon-damage',
					multiple: 2,
					remove: 'weapon-damage'
				},
				{
					find: [
						/group of 8 Shadow Beasts plummet from the sky at a targeted location dealing (\d+)% weapon damage each/
					],
					effect: 'weapon-damage',
					multiple: 8,
					remove: 'weapon-damage'
				},
				{
					find: [
						/wave of 10 Shadow Beasts to tear across the ground, knocking back enemies and dealing (\d+)% weapon damage/
					], 
					effect: 'weapon-damage',
					multiple: 10,
					remove: 'weapon-damage'
				},
				{
					find: [
						/wave of 10 Shadow Beasts to tear across the ground, knocking back enemies and dealing (\d+)% weapon damage/,
						/group of 8 Shadow Beasts plummet from the sky at a targeted location dealing (\d+)% weapon damage each/
					],
					remove: 'weapon-damage-for'					
				},
				{
					find: [
						/rain down on enemies for 35% weapon damage for (\d+) seconds/,
						/drops grenades from the sky for (\d+) seconds/
					],
					effect: 'weapon-damage-for',
					remove: 'weapon-damage-for'
				},
				{
					find: [
						/Increase Fury gained to (\d+)./,
						/Increases Fury gained to (\d+)/
					],
					effect: 'generate-fury', 
					remove: 'generate-fury'
				},
				{
					find: [
						/Increase the Hatred generated to (\d+) per/
					],
					effect: 'generate-hatred',
					remove: 'generate-hatred'
				},
				{
					find: [
						/Reduces the cost of Caltrops to (\d+) Discipline./,
						/Reduce the cost to (\d+) Discipline/,
						/Decreases the Discipline cost to (\d+)/
					],
					effect: 'cost-discipline',
					remove: 'cost-discipline',
				},
				{
					find: [
						/Reduce Fury cost to (\d+) Fury./
					],
					effect: 'cost-fury',
					remove: 'cost-fury'
				},
				{
					find: [
						/Reduces the initial Hatred cost to (\d+)/
					],
					effect: 'cost-hatred',
					remove: 'cost-hatred'
				},
				{
					find: [
						/and reduces the cooldown to (\d+) seconds/
					],
					effect: 'cooldown',
					remove: 'cooldown'
				},
				{
					find: [
						/Increase damage bonus to (\d+)%/,
						/The marked enemy will take (\d+)% additional damage/
					],
					effect: 'plus-damage',
					remove: 'plus-damage'
				},
				{
					find: [
						/Increases the Armor bonus to (\d+)%/
					],
					effect: 'plus-armor',
					remove: 'plus-armor'
				},
				{
					find: [
						/Increases bonus to Dodge Chance to (\d+)%/
					],
					effect: 'plus-dodge',
					remove: 'plus-dodge'
				}
			];
			function determineEffects(skill) {
				$.each(effectMap, function(k,v) {
					$.each(v['find'], function(idx, regex) {
						// Get the Base Effect
						matches = regex.exec(skill.desc);
						if(matches) {
							if(v.removeTip && v.removeTip == true) {
								skill.desc = skill.desc.replace(regex, '');
							}
							if(typeof(skill.effect) == 'undefined') {
								skill.effect = {};
							}
							if(v.remove) {
								delete skill.effect[v.remove];
							}
							if(matches[1]) {
								var multiplier = 1;
								if(v.multiple) {
									multiplier = v.multiple;
									if(!skill.effect['stack']) {
										skill.effect['stack'] = {};
									}
									if(!skill.effect['stack'][v.effect]) {
										skill.effect['stack'][v.effect] = {
											value: 0,
											limit: 0
										};
									}
									skill.effect['stack'][v.effect]['limit'] += multiplier;
									skill.effect['stack'][v.effect]['value'] += parseFloat(matches[1]);
								} else {
									if(!skill.effect[v.effect]) {
										skill.effect[v.effect] = 0;
									}
									if(v.effect) {
										skill.effect[v.effect] += parseFloat(matches[1]);	
									}									
								}
							}
						}
						// Do the Rune Effect
						matches = regex.exec(skill.rune);
						if(matches) {
							if(typeof(skill.effect) == 'undefined') {
								skill.effect = {};
							}
							if(v.remove) {
								delete skill.effect[v.remove];
							}
							if(matches[1]) {
								var multiplier = 1;
								if(v.multiple) {
									multiplier = v.multiple;
									if(!skill.effect['stack']) {
										skill.effect['stack'] = {};
									}
									if(!skill.effect['stack'][v.effect]) {
										skill.effect['stack'][v.effect] = {
											value: 0,
											limit: 0
										};
									}
									skill.effect['stack'][v.effect]['limit'] += multiplier;
									skill.effect['stack'][v.effect]['value'] += parseFloat(matches[1]);
								} else {
									if(v.effect) {
										if(!skill.effect[v.effect]) {
											skill.effect[v.effect] = 0;
										}
										skill.effect[v.effect] += parseFloat(matches[1]);	
									}									
								}
							}
						}
						// if(matches) {
						// 	if(typeof(skill.effect) == 'undefined') {
						// 		skill.effect = {};
						// 	}
						// 	$.each(matches, function(i,match) {
						// 		if(i != 0) {
						// 			if(skill.effect[v.effect]) {
						// 				if(v.multiple) {
						// 					skill.effect[v.effect] += parseFloat(match) * v.multiple;
						// 				} else {
						// 					skill.effect[v.effect] += parseFloat(match);										
						// 				}
						// 			} else {
						// 				if(v.multiple) {
						// 					skill.effect[v.effect] = parseFloat(match) * v.multiple;
						// 				} else {
						// 					skill.effect[v.effect] = parseFloat(match);										
						// 				}
						// 			}
						// 		}
						// 	});							
						// }
					});
					
											
					// Check for effects on the Rune and overwrite the base skills effects

				});
				return skill;
			}
			var runeName = $(v.tooltip).find("strong").html();
			if(runeName) {
				newSkill.name = newSkill.name + " - " + runeName.trim().replace(/[\b\t\n\v\f\r']/g, function(val) { return map[val]; });
			}
			$.each($(v.tooltip).find(".d3tt_primary_active"), function(k,v) {
				var frag = $(v);
				if(k == 0) {
					var clean = frag.text().replace(/[\b\t\n\v\f\r']/g, function(val) { return map[val]; });
					// Bunch of Logic to build the skills...
					// console.log(clean);
					newSkill.desc = clean;
					// target.append("\r\tdesc: '" + clean + "',");					
				}
				if(k == 1){
					var clean = frag.text().replace(/[\b\t\n\v\f\r']/g, function(val) { return map[val]; });					
					newSkill.rune = clean;
					// target.append("\r\trune: '" + clean + "',");										
				}
			});
			if(newSkill.class == 'undefined' || typeof(newSkill.desc) == 'undefined') {
				// console.log("Unknown: " + html.text());				
			} else {
				newSkill = determineEffects(newSkill);
				skills[newSkill.class].push(newSkill);				
			}
			
		});
		console.log(skills);
		
		var wgets = $("#wgets")
		var target = $("#json");
		$.each(skills, function(k,v) {
			if(k != 'undefined') {
				target.append("\n'" + k + "': {");
				$.each(v, function(i, s) {
					var baseSkill = s.slug.split("~"),
							newFilename = s.class + "-" + baseSkill[0] + ".png"
					wgets.append("\nwget -O " + newFilename + " " + s.icon);
					target.append("\n\t'" + s.slug + "': {");		
					target.append("\n\t\tname: '" + s.name.trim() + "',");
					if(s.desc && s.desc != "undefined") {
						target.append("\n\t\tdesc: '" + s.desc.trim() + "',");
					}
					if(s.rune && s.rune != "undefined") {
						target.append("\n\t\trune: '" + s.rune.trim() + "',");					
					}
					if(s.effect && s.effect != "undefined") {
						target.append("\n\t\teffect: {");
						$.each(s.effect, function(name, effect) {
							if(typeof(effect) == "object") {
								target.append("\n\t\t\t'stack': {");
								$.each(effect, function(k,v) {
									target.append("\n\t\t\t\t'" + k + "': {");
									target.append("\n\t\t\t\t\t'limit': " + v['limit'] + ",");
									target.append("\n\t\t\t\t\t'value': " + v['value'] + ",");
									target.append("\n\t\t\t\t},");
								});
								target.append("\n\t\t\t},");							
							} else {
								target.append("\n\t\t\t'" + name + "': " + effect + ",");															
							}
						});
						target.append("\n\t\t},");
					}
					target.append("\n\t},");		
				});
				target.append("\n},");
			}
		});
	});
</script>
<textarea id="wgets"></textarea>
<pre id="json">
</pre>